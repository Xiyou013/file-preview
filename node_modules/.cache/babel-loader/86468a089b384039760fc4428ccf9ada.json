{"ast":null,"code":"import { renderAsync } from \"docx-preview\";\nimport { onMounted } from \"vue\";\nimport axios from 'axios';\nexport default {\n  __name: 'indexPage',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n\n    const renderDocx = () => {\n      console.log('111111');\n      renderAsync(this.fileData, this.$refs.file, null, {\n        className: \"docx\",\n        //默认和文档样式类的类名/前缀\n        inWrapper: true,\n        //启用围绕文档内容呈现包装器\n        ignoreWidth: false,\n        //禁用页面的渲染宽度\n        ignoreHeight: false,\n        //禁用页面的渲染高度\n        ignoreFonts: false,\n        //禁用字体渲染\n        breakPages: true,\n        //在分页符上启用分页\n        ignoreLastRenderedPageBreak: true,\n        //在lastRenderedPageBreak元素上禁用分页\n        experimental: false,\n        //启用实验功能（制表符停止计算）\n        trimXmlDeclaration: true,\n        //如果为true，则在解析之前将从xml文档中删除xml声明\n        useBase64URL: false,\n        //如果为true，图像、字体等将转换为base 64 URL，否则使用URL.createObjectURL\n        useMathMLPolyfill: false,\n        //包括用于铬、边等的MathML多填充。\n        showChanges: false,\n        //启用文档更改的实验渲染（插入/删除）\n        debug: false //启用额外的日志记录\n\n      });\n    };\n\n    onMounted(() => {\n      // renderDocx()\n      axios({\n        method: 'get',\n        responseType: 'blob',\n        // 设置响应文件格式\n        url: '/docx'\n      }).then(({\n        data\n      }) => {\n        docx.renderAsync(data, this.$refs.file); // 渲染到页面预览\n      });\n    });\n    const __returned__ = {\n      renderDocx,\n      renderAsync,\n      onMounted,\n      axios\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAMA,SAASA,WAAT,QAA4B,cAA5B;AACA,SAASC,SAAT,QAA0B,KAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;;;IACA,MAAMC,UAAU,GAAG,MAAM;MACrBC,OAAO,CAACC,GAAR,CAAY,QAAZ;MACAL,WAAW,CAAC,KAAKM,QAAN,EAAgB,KAAKC,KAAL,CAAWC,IAA3B,EAAiC,IAAjC,EAAuC;QAC9CC,SAAS,EAAE,MADmC;QAC3B;QACnBC,SAAS,EAAE,IAFmC;QAE7B;QACjBC,WAAW,EAAE,KAHiC;QAG1B;QACpBC,YAAY,EAAE,KAJgC;QAIzB;QACrBC,WAAW,EAAE,KALiC;QAK1B;QACpBC,UAAU,EAAE,IANkC;QAM5B;QAClBC,2BAA2B,EAAE,IAPiB;QAOX;QACnCC,YAAY,EAAE,KARgC;QAQzB;QACrBC,kBAAkB,EAAE,IAT0B;QASpB;QAC1BC,YAAY,EAAE,KAVgC;QAUzB;QACrBC,iBAAiB,EAAE,KAX2B;QAWpB;QAC1BC,WAAW,EAAE,KAZiC;QAY1B;QACpBC,KAAK,EAAE,KAbuC,CAahC;;MAbgC,CAAvC,CAAX;IAeH,CAjBD;;IAkBApB,SAAS,CAAC,MAAM;MACZ;MAEIC,KAAK,CAAC;QACFoB,MAAM,EAAE,KADN;QAEFC,YAAY,EAAE,MAFZ;QAEoB;QACtBC,GAAG,EAAE;MAHH,CAAD,CAAL,CAIGC,IAJH,CAIQ,CAAC;QAAEC;MAAF,CAAD,KAAc;QAClBC,IAAI,CAAC3B,WAAL,CAAiB0B,IAAjB,EAAuB,KAAKnB,KAAL,CAAWC,IAAlC,EADkB,CACsB;MAC3C,CAND;IAQP,CAXQ,CAAT","names":["renderAsync","onMounted","axios","renderDocx","console","log","fileData","$refs","file","className","inWrapper","ignoreWidth","ignoreHeight","ignoreFonts","breakPages","ignoreLastRenderedPageBreak","experimental","trimXmlDeclaration","useBase64URL","useMathMLPolyfill","showChanges","debug","method","responseType","url","then","data","docx"],"sources":["F:/hub-code/file-preview/src/views/test/indexPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"homePage\">test</div>\r\n    <div ref=\"file\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport { renderAsync } from \"docx-preview\";\r\nimport { onMounted } from \"vue\";\r\nimport axios from 'axios'\r\nconst renderDocx = () => {\r\n    console.log('111111');\r\n    renderAsync(this.fileData, this.$refs.file, null, {\r\n        className: \"docx\", //默认和文档样式类的类名/前缀\r\n        inWrapper: true, //启用围绕文档内容呈现包装器\r\n        ignoreWidth: false, //禁用页面的渲染宽度\r\n        ignoreHeight: false, //禁用页面的渲染高度\r\n        ignoreFonts: false, //禁用字体渲染\r\n        breakPages: true, //在分页符上启用分页\r\n        ignoreLastRenderedPageBreak: true, //在lastRenderedPageBreak元素上禁用分页\r\n        experimental: false, //启用实验功能（制表符停止计算）\r\n        trimXmlDeclaration: true, //如果为true，则在解析之前将从xml文档中删除xml声明\r\n        useBase64URL: false, //如果为true，图像、字体等将转换为base 64 URL，否则使用URL.createObjectURL\r\n        useMathMLPolyfill: false, //包括用于铬、边等的MathML多填充。\r\n        showChanges: false, //启用文档更改的实验渲染（插入/删除）\r\n        debug: false, //启用额外的日志记录\r\n    });\r\n}\r\nonMounted(() => {\r\n    // renderDocx()\r\n    \r\n        axios({\r\n            method: 'get',\r\n            responseType: 'blob', // 设置响应文件格式\r\n            url: '/docx',\r\n        }).then(({ data }) => {\r\n            docx.renderAsync(data, this.$refs.file) // 渲染到页面预览\r\n        })\r\n\r\n})\r\n</script>\r\n\r\n<style>\r\n.homePage {\r\n    font-size: 30px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}