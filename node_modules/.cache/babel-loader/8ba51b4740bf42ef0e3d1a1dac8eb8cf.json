{"ast":null,"code":"import { onMounted } from \"vue\";\nimport axios from './axios/http.js';\nexport default {\n  __name: 'indexPage',\n\n  setup(__props, {\n    expose\n  }) {\n    expose(); // import { renderAsync } from \"docx-preview\";\n\n    let docx = require('docx-preview'); // const renderDocx = () => {\n    //     console.log('111111');\n    //     renderAsync(this.fileData, this.$refs.file, null, {\n    //         className: \"docx\", //默认和文档样式类的类名/前缀\n    //         inWrapper: true, //启用围绕文档内容呈现包装器\n    //         ignoreWidth: false, //禁用页面的渲染宽度\n    //         ignoreHeight: false, //禁用页面的渲染高度\n    //         ignoreFonts: false, //禁用字体渲染\n    //         breakPages: true, //在分页符上启用分页\n    //         ignoreLastRenderedPageBreak: true, //在lastRenderedPageBreak元素上禁用分页\n    //         experimental: false, //启用实验功能（制表符停止计算）\n    //         trimXmlDeclaration: true, //如果为true，则在解析之前将从xml文档中删除xml声明\n    //         useBase64URL: false, //如果为true，图像、字体等将转换为base 64 URL，否则使用URL.createObjectURL\n    //         useMathMLPolyfill: false, //包括用于铬、边等的MathML多填充。\n    //         showChanges: false, //启用文档更改的实验渲染（插入/删除）\n    //         debug: false, //启用额外的日志记录\n    //     });\n    // }\n    // 预览\n\n\n    const goPreview = () => {\n      axios({\n        method: \"get\",\n        responseType: \"blob\",\n        // 因为是流文件，所以要指定blob类型\n        url: \"/getDoc\" // 自己的服务器，提供的一个word下载文件接口\n\n      }).then(({\n        data\n      }) => {\n        console.log(data); // 后端返回的是流文件\n\n        docx.renderAsync(data, this.$refs.file); // 渲染到页面\n      });\n    };\n\n    onMounted(() => {\n      goPreview(); // renderDocx()\n      // axios({\n      //     method: 'get',\n      //     responseType: 'blob', // 设置响应文件格式\n      //     url: '/docx',\n      //     // url: 'C:/Users/Admin/Desktop/消防题库V1.0.docx'\n      // }).then(({ data }) => {\n      //     docx.renderAsync(data, this.$refs.file) // 渲染到页面预览\n      // })\n    });\n    const __returned__ = {\n      docx,\n      goPreview,\n      onMounted,\n      axios\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAOA,SAASA,SAAT,QAA0B,KAA1B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;;;;;;cAFA;;IAGA,IAAIC,IAAI,GAAGC,OAAO,CAAC,cAAD,CAAlB,EACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;IACA,MAAMC,SAAS,GAAC,MAAK;MACjBH,KAAK,CAAC;QACFI,MAAM,EAAE,KADN;QAEFC,YAAY,EAAE,MAFZ;QAEoB;QACtBC,GAAG,EAAE,SAHH,CAGc;;MAHd,CAAD,CAAL,CAIGC,IAJH,CAIQ,CAAC;QAAEC;MAAF,CAAD,KAAc;QAClBC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADkB,CACC;;QACnBP,IAAI,CAACU,WAAL,CAAiBH,IAAjB,EAAuB,KAAKI,KAAL,CAAWC,IAAlC,EAFkB,CAEuB;MAC5C,CAPD;IAQH,CATD;;IAWAd,SAAS,CAAC,MAAM;MACZI,SAAS,GADG,CAEZ;MACI;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACP,CAXQ,CAAT","names":["onMounted","axios","docx","require","goPreview","method","responseType","url","then","data","console","log","renderAsync","$refs","file"],"sources":["F:/hub-code/file-preview/src/views/test/indexPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"homePage\">test</div>\r\n    <div ref=\"file\"></div>\r\n</template>\r\n\r\n<script setup>\r\n// import { renderAsync } from \"docx-preview\";\r\nimport { onMounted } from \"vue\";\r\nimport axios from './axios/http.js';\r\nlet docx = require('docx-preview');\r\n// const renderDocx = () => {\r\n//     console.log('111111');\r\n//     renderAsync(this.fileData, this.$refs.file, null, {\r\n//         className: \"docx\", //默认和文档样式类的类名/前缀\r\n//         inWrapper: true, //启用围绕文档内容呈现包装器\r\n//         ignoreWidth: false, //禁用页面的渲染宽度\r\n//         ignoreHeight: false, //禁用页面的渲染高度\r\n//         ignoreFonts: false, //禁用字体渲染\r\n//         breakPages: true, //在分页符上启用分页\r\n//         ignoreLastRenderedPageBreak: true, //在lastRenderedPageBreak元素上禁用分页\r\n//         experimental: false, //启用实验功能（制表符停止计算）\r\n//         trimXmlDeclaration: true, //如果为true，则在解析之前将从xml文档中删除xml声明\r\n//         useBase64URL: false, //如果为true，图像、字体等将转换为base 64 URL，否则使用URL.createObjectURL\r\n//         useMathMLPolyfill: false, //包括用于铬、边等的MathML多填充。\r\n//         showChanges: false, //启用文档更改的实验渲染（插入/删除）\r\n//         debug: false, //启用额外的日志记录\r\n//     });\r\n// }\r\n// 预览\r\nconst goPreview=()=> {\r\n    axios({\r\n        method: \"get\",\r\n        responseType: \"blob\", // 因为是流文件，所以要指定blob类型\r\n        url: \"/getDoc\", // 自己的服务器，提供的一个word下载文件接口\r\n    }).then(({ data }) => {\r\n        console.log(data); // 后端返回的是流文件\r\n        docx.renderAsync(data, this.$refs.file); // 渲染到页面\r\n    });\r\n}\r\n\r\nonMounted(() => {\r\n    goPreview()\r\n    // renderDocx()\r\n        // axios({\r\n        //     method: 'get',\r\n        //     responseType: 'blob', // 设置响应文件格式\r\n        //     url: '/docx',\r\n        //     // url: 'C:/Users/Admin/Desktop/消防题库V1.0.docx'\r\n        // }).then(({ data }) => {\r\n        //     docx.renderAsync(data, this.$refs.file) // 渲染到页面预览\r\n        // })\r\n})\r\n</script>\r\n\r\n<style>\r\n.homePage {\r\n    font-size: 30px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}