{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"homePage\"\n}, \"test\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"my-component\",\n  ref: \"preview\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createCommentVNode(\" <div ref=\\\"file\\\" class=\\\"file\\\"></div> \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: $setup.previewDocx,\n    ref: \"file\"\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  )], 512\n  /* NEED_PATCH */\n  )], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACIA,oBAAgC,KAAhC,EAAgC;EAA3BC,KAAK,EAAC;AAAqB,CAAhC,EAAsB,MAAtB,EAA0B;AAAA;AAA1B;;;EAEKA,KAAK,EAAC;EAAeC,GAAG,EAAC;;;6DAF9BC,YACAC,kEACAJ,oBAEM,KAFN,cAEM,CADFA,oBAAoD,OAApD,EAAoD;IAA7CK,IAAI,EAAC,MAAwC;IAAhCC,QAAM,EAAEC,kBAAwB;IAAXL,GAAG,EAAC;EAAO,CAApD;;EAAA,CACE,CAFN;;EAAA","names":["_createElementVNode","class","ref","_hoisted_1","_createCommentVNode","type","onChange","$setup"],"sourceRoot":"","sources":["F:\\hub-code\\file-preview\\src\\views\\test\\indexPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"homePage\">test</div>\r\n    <!-- <div ref=\"file\" class=\"file\"></div> -->\r\n    <div class=\"my-component\" ref=\"preview\">\r\n        <input type=\"file\" @change=\"previewDocx\" ref=\"file\">\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n// import { renderAsync } from \"docx-preview\";\r\nimport { onMounted, ref } from \"vue\";\r\nimport axios from '/src/axios/http.js';\r\nlet docx = require('docx-preview');\r\nwindow.JSZip = require('jszip')\r\nconst file = ref()\r\nconst preview = ref()\r\n// const renderDocx = (data,file) => {\r\n//     console.log('111111',data,file);\r\n//     // renderAsync(this.fileData, this.$refs.file, null, {\r\n//     renderAsync(data, file, null, {\r\n//         className: \"docx\", //默认和文档样式类的类名/前缀\r\n//         inWrapper: true, //启用围绕文档内容呈现包装器\r\n//         ignoreWidth: false, //禁用页面的渲染宽度\r\n//         ignoreHeight: false, //禁用页面的渲染高度\r\n//         ignoreFonts: false, //禁用字体渲染\r\n//         breakPages: true, //在分页符上启用分页\r\n//         ignoreLastRenderedPageBreak: true, //在lastRenderedPageBreak元素上禁用分页\r\n//         experimental: false, //启用实验功能（制表符停止计算）\r\n//         trimXmlDeclaration: true, //如果为true，则在解析之前将从xml文档中删除xml声明\r\n//         useBase64URL: false, //如果为true，图像、字体等将转换为base 64 URL，否则使用URL.createObjectURL\r\n//         useMathMLPolyfill: false, //包括用于铬、边等的MathML多填充。\r\n//         showChanges: false, //启用文档更改的实验渲染（插入/删除）\r\n//         debug: false, //启用额外的日志记录\r\n//     });\r\n// }\r\n\r\n// 本地文件预览\r\nconst previewDocx = (e) => {\r\n    console.log('e::',e);\r\n    console.log('file.value.files[0]', file.value.files[0]);\r\n    console.log('preview.value', preview.value);\r\n    docx.renderAsync(file.value.files[0], preview.value) // 渲染到页面预览\r\n}\r\nconst goPreview=()=> {\r\n    axios({\r\n        method: \"get\",\r\n        responseType: \"blob\", // 因为是流文件，所以要指定blob类型\r\n        url: \"/getDoc\", // 自己的服务器，提供的一个word下载文件接口\r\n    }).then((res) => {\r\n        console.log('123', res,res.data); // 后端返回的是流文件\r\n        console.log('file.value', file);\r\n        // renderDocx(data, file.value)\r\n        // docx.renderAsync(data, this.$refs.file); // 渲染到页面\r\n        docx.renderAsync(res.data, file.value); // 渲染到页面\r\n    });\r\n    // let res = axios.get('/api/getDoc')\r\n    // console.log('12132123', res);\r\n    // console.log('file.value', file);\r\n    // if (res) {\r\n    //     console.log(res); // 后端返回的是流文件\r\n\r\n    //     docx.renderAsync(res.data, file.value); // 渲染到页面\r\n    // }\r\n    // axios.get('/api/getDoc')\r\n    //     .then(response => {\r\n    //         console.log('1111',response.data.url);\r\n    //         console.log('2222',response.data.explanation);\r\n    //     })\r\n    //     .catch(error => {\r\n    //         console.log('3333',error);\r\n    //     });\r\n}\r\n\r\nonMounted(() => {\r\n    goPreview()\r\n    // renderDocx()\r\n        // axios({\r\n        //     method: 'get',\r\n        //     responseType: 'blob', // 设置响应文件格式\r\n        //     url: '/docx',\r\n        //     // url: 'C:/Users/Admin/Desktop/消防题库V1.0.docx'\r\n        // }).then(({ data }) => {\r\n        //     docx.renderAsync(data, this.$refs.file) // 渲染到页面预览\r\n        // })\r\n})\r\n</script>\r\n\r\n<style>\r\n.homePage {\r\n    font-size: 30px;\r\n}\r\n.file{\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n.my-component {\r\n    width: 100%;\r\n    height: 90vh;\r\n    border: 1px solid #000;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}